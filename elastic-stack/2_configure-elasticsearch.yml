---

- hosts: localhost
  become: true
  vars_files:
    - vars.yml


  tasks:

  - name: Stop Elasticsearch
    service: name=elasticsearch state=stopped

  - name: Collect the list of installed Elasticsearch plugins
    command: /usr/share/elasticsearch/bin/elasticsearch-plugin list
    register: elasticsearch_plugins

  - name: Add the ingest-geoip plugin to Elasticsearch
    command: /usr/share/elasticsearch/bin/elasticsearch-plugin install file:///opt/ingest-geoip.zip --batch
    when: "'ingest-geoip' not in elasticsearch_plugins.stdout"

  - name: Add the ingest-user-agent plugin to Elasticsearch
    command: /usr/share/elasticsearch/bin/elasticsearch-plugin install file:///opt/ingest-user-agent.zip --batch
    when: "'ingest-user-agent' not in elasticsearch_plugins.stdout"

  - name: Add X-Pack to Elasticsearch
    command: /usr/share/elasticsearch/bin/elasticsearch-plugin install file:///opt/x-pack.zip --batch
    when: "'x-pack' not in elasticsearch_plugins.stdout"

  - name: Change Elasticsearch's memory usage to 512MB
    lineinfile:
      dest: /etc/elasticsearch/jvm.options
      regexp: "^-Xms"
      line: "-Xms512m"
      state: present
  - lineinfile:
      dest: /etc/elasticsearch/jvm.options
      regexp: "^-Xmx"
      line: "-Xmx512m"
      state: present

  - name: Bind to all local interfaces
    lineinfile:
      dest: /etc/elasticsearch/elasticsearch.yml
      regexp: "network.host"
      line: "network.host: 0.0.0.0"
      state: present

  - name: Do not swap
    lineinfile:
      dest: /etc/elasticsearch/elasticsearch.yml
      regexp: "bootstrap.memory_lock"
      line: "bootstrap.memory_lock: true"
      state: present

  - name: We only have a single node, set minimum master nodes accordingly
    lineinfile:
      dest: /etc/elasticsearch/elasticsearch.yml
      regexp: "discovery.zen.minimum_master_nodes"
      line: "discovery.zen.minimum_master_nodes: 1"
      state: present

  - name: Require explicit names when deleting indices
    lineinfile:
      dest: /etc/elasticsearch/elasticsearch.yml
      regexp: "action.destructive_requires_name"
      line: "action.destructive_requires_name: true"
      state: present

  - name: Set the right ulimit for the number of files
    shell: ulimit -n 65536

  - name: Set the right ulimit for the memory locking
    shell: ulimit -l unlimited

  - name: Set the limit for the number of files permanentely
    lineinfile:
      dest: /etc/security/limits.conf
      regexp: "elasticsearch  -  nofile"
      line: "elasticsearch  -  nofile  65536"
      state: present

  - name: Set the limit for the locked memory permanentely
    lineinfile:
      dest: /etc/security/limits.conf
      regexp: "elasticsearch  -  memlock"
      line: "elasticsearch  -  memlock  unlimited"
      state: present

  - name: Uncomment a setting so Ubuntu correctly applies limits.conf
    lineinfile:
      dest: /etc/pam.d/su
      regexp: "session    required   pam_limits.so"
      line: "#session    required   pam_limits.so"
      state: present

  - name: Create the Systemd configuration directory
    file: path=/etc/systemd/system/elasticsearch.service.d/ state=directory

  - name: Set the right Systemd configuration
    template: src=templates/systemd-elasticsearch.conf dest=/etc/systemd/system/elasticsearch.service.d/elasticsearch.conf

  - name: Reload the configuration changes of the service
    command: systemctl daemon-reload

  - name: Start Elasticsearch
    service: name=elasticsearch state=started

  - name: Wait for Elasticsearch to become available
    wait_for:
      port: 9200
      delay: 5

  - name: Set the number of shards to two and the number of replicas to 0
    command: >
      curl -XPUT 'http://localhost:9200/_template/default'
           -H "Content-Type: application/json"
           -u "{{ elastic_user }}:{{ elastic_password }}"
           -d '{
                 "template": "*",
                 "order" : 0,
                 "settings": {
                   "number_of_shards": 2,
                   "number_of_replicas": 0
                 }
               }'
